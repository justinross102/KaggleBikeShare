subset(select = -6) %>%
filter(opponent == "TEX")
get_season <- function(url, index, header = T){
df <- url %>%
read_html() %>%
html_elements("table") %>%
html_table(header=header) %>%
.[[index]]
df %>%
select(4,6:9,11,18) %>%
rename("team" = "Tm", "opponent" = "Opp", "phillies_win" = "W/L", "runs" = "R",
"opp_runs" = "RA", "win_loss" = "W-L", "game_type" = "D/N") %>%
mutate(phillies_win = ifelse(phillies_win == "W", 1, 0),
runs = suppressWarnings(as.numeric(runs)),
opp_runs = suppressWarnings(as.numeric(opp_runs)),
game_type = ifelse(game_type == "D", "day", "night"),
phi_wins = suppressWarnings(as.numeric(sub("-.*", "", win_loss))),
phi_losses = suppressWarnings(as.numeric(str_extract(win_loss, "(?<=-).*$")))) %>%
mutate(phi_wins = ifelse(phillies_win == 1, phi_wins - 1, phi_wins),
phi_losses = ifelse(phillies_win == 0, phi_losses - 1, phi_losses)) %>%
na.omit() %>%
subset(select = -6) %>%
filter(opponent == "TEX")
}
phi_vs_tex_2022
get_season("https://www.baseball-reference.com/teams/PHI/2022-schedule-scores.shtml", 1)
# Data --------------------------------------------------------------------
phi_vs_tex_2022 <- get_season("https://www.baseball-reference.com/teams/PHI/2022-schedule-scores.shtml", 1)
phi_vs_tex_2017 <- get_season("https://www.baseball-reference.com/teams/PHI/2017-schedule-scores.shtml", 1)
phi_vs_tex_2014 <- get_season("https://www.baseball-reference.com/teams/PHI/2014-schedule-scores.shtml", 1)
phi_vs_tex_2011 <- get_season("https://www.baseball-reference.com/teams/PHI/2011-schedule-scores.shtml", 1)
phi_vs_tex_2008 <- get_season("https://www.baseball-reference.com/teams/PHI/2008-schedule-scores.shtml", 1)
phi_vs_tex_2005 <- get_season("https://www.baseball-reference.com/teams/PHI/2005-schedule-scores.shtml", 1)
rbind(phi_vs_tex_2022, phi_vs_tex_2017, phi_vs_tex_2014, phi_vs_tex_2011, phi_vs_tex_2008, phi_vs_tex_2005)
library(corrplot)  # for the correlation matrix
library(bestglm)  # for variable selection
library(car)  # for the VIFs
library(pROC)  # for the ROC curve
library(ROCR)  # for the color-coded ROC curve
library(gridExtra)
rbind(phi_vs_tex_2022, phi_vs_tex_2017, phi_vs_tex_2014, phi_vs_tex_2011, phi_vs_tex_2008, phi_vs_tex_2005)
library(tidyverse)
library(rvest)
library(corrplot)  # for the correlation matrix
library(bestglm)  # for variable selection
library(car)  # for the VIFs
library(pROC)  # for the ROC curve
library(ROCR)  # for the color-coded ROC curve
library(gridExtra)
get_season <- function(url, index, header = T){
df <- url %>%
read_html() %>%
html_elements("table") %>%
html_table(header=header) %>%
.[[index]]
df %>%
select(4,6:9,11,18) %>%
rename("team" = "Tm", "opponent" = "Opp", "phillies_win" = "W/L", "runs" = "R",
"opp_runs" = "RA", "win_loss" = "W-L", "game_type" = "D/N") %>%
mutate(phillies_win = ifelse(phillies_win == "W", 1, 0),
runs = suppressWarnings(as.numeric(runs)),
opp_runs = suppressWarnings(as.numeric(opp_runs)),
game_type = ifelse(game_type == "D", "day", "night"),
phi_wins = suppressWarnings(as.numeric(sub("-.*", "", win_loss))),
phi_losses = suppressWarnings(as.numeric(str_extract(win_loss, "(?<=-).*$")))) %>%
mutate(phi_wins = ifelse(phillies_win == 1, phi_wins - 1, phi_wins),
phi_losses = ifelse(phillies_win == 0, phi_losses - 1, phi_losses)) %>%
na.omit() %>%
subset(select = -6) %>%
filter(opponent == "TEX")
}
summary(data)
install.packages("lubridate")
install.packages("lubridate")
hw340_17 <- scan()
sum(hw340_17^2)
1490.106/20
?skew
?skew()
install.packages("tidyquant")
library(extrafont)
install.packages("remotes")
library(extrafont)
remotes::install_github("wch/extrafont")
library(extrafont)
windowsFonts()
font_import()
windowsFonts()
names(pdfFonts())
library(tidyverse)
library(lubridate)
elec$Day <- as.factor(elec$Day, levels = c("Sun", "Mon", "Tue", "Wed",
"Thu", "Fri", "Sat")) # change weekday to factor
23.50 26.25 21.50 26.00 19.75
num39a <- scan()
num39a %>%
ggplot(mapping = aes(x = num39a)) +
geom_density()
library(tidyverse)
num39a %>%
ggplot(mapping = aes(x = num39a)) +
geom_density()
hist(num39a)
library(tidyverse)
num39 <- scan()
num39 <- scan()
hist(num39)
confint(num39)
confint(num39, level = 0.95)
mean(num39)
sd(num39)
mu <- mean(num39)
s <- sd(num39)
length(num39)
MoE <- qt(0.975, df = length(num39)-1)*s/sqrt(length(num39))
cat("the", "end")
cat("the", ",", "end")
cat("the ", ",", "end")
cat(mu - MoE, mu + MoE)
ggqqplot(num39)
library(ggpubr)
install.packages("ggpubr")
install.packages("ggpubr")
library(tidyverse)
library(ggpubr)
ggqqplot(num39)
ggpubr::ggqqplot(num39)
qt(.95,10)
qt(.95,15)
mu <- 8.48
s <- 0.79
n <- 14
MoE <- qt(0.975, df = n-1)*s/sqrt(n)
cat(mu - MoE, mu + MoE)
qt(0.975, df = n-1)
mu <- 8.48
s <- 0.79
n <- 14
MoE <- qt(0.975, df = n-1)*s/sqrt(n)
cat(mu - MoE, mu + MoE)
MoE <- qt(0.99, df = n-1)*s/sqrt(n)
cat(mu - MoE, mu + MoE)
MoE <- qt(0.95, df = n-1)*s/sqrt(n)
cat(mu - MoE, mu + MoE)
MoE <- qt(0.975, df = n-1, lower.tail = T)*s/sqrt(n)
cat(mu - MoE, mu + MoE)
MoE <- qt(0.975, df = n-1, lower.tail = F)*s/sqrt(n)
cat(mu - MoE, mu + MoE)
MoE <- qt(0.975, df = n-1, lower.tail = T)*s/sqrt(n)
cat(mu - MoE, mu + MoE)
lower_bound = 8.48 + t * (s / sqrt(n)) # lower confidence bound
lower_bound
t <- qt(0.05, df = 13, lower.tail = TRUE) # t-value for 95% confidence and 13 df
lower_bound <- 8.48 + t * (s / sqrt(n)) # lower confidence bound
lower_bound
t = qt(0.05, df = 13, lower.tail = TRUE) # t-value for 95% confidence level and 13 degrees of freedom
lower_bound = 8.48 + t * (0.79 / sqrt(14)) # lower confidence bound
lower_bound
qt(0.975, df = n-1, lower.tail = T)
qt(0.975, df = n-1, lower.tail = F)
qt(0.975, df = n-1)
qt(0.95, df = n-1)
mu <- 8.48
s <- 0.79
n <- 14
MoE <- qt(0.95, df = n-1)*s/sqrt(n)
mu - MoE
MoE <- qt(0.95, df = n-1)*s/sqrt(n)
mu - MoE
mu + MoE
MoE <- qt(0.95, df = n-1)*s/n
mu + MoE
mu - MoE
MoE <- qt(0.95, df = n-1)*s/sqrt(n)
mu - MoE
MoE <- qt(0.975, df = n-1)*s/sqrt(n)
mu - MoE
MoE <- qt(0.95, df = n-1)*s/sqrt(n)
mu - MoE
MoE <- qt(0.05, df = n-1, lower.tail = T)*s/sqrt(n)
mu - MoE
MoE <- qt(0.025, df = n-1, lower.tail = T)*s/sqrt(n)
mu - MoE
MoE <- qt(0.025, df = n-1, lower.tail = F)*s/sqrt(n)
mu - MoE
MoE <- qt(0.975, df = n-1)*s/sqrt(n)
mu - MoE
MoE <- qt(0.025, df = n-1)*s/sqrt(n)
mu - MoE
mu <- 8.48
s <- 0.79
n <- 14
MoE <- qt(0.025, df = n-1)*s/sqrt(n)
mu - MoE
lower_bound = 8.48 - qt(0.025, 13) * 0.79 / sqrt(14)
lower_bound
MoE <- qt(0.95, df = n-1)*s/sqrt(n)
mu - MoE
mu <- 8.48
s <- 0.79
n <- 14
MoE <- qt(0.95, df = n-1)*s/sqrt(n)
mu - MoE
MoE <- qt(0.95, df = n-1)*s/sqrt(n)
mu - MoE
mu <- 8.48
s <- 0.79
n <- 14
MoE <- qt(0.95, df = n-1)*s/sqrt(n)
mu - MoE
cat(mu - MoE, mu + MoE)
n <- length(num39)
mu <- mean(num39)
s <- sd(num39)
MoE <- qt(0.975, df = length(num39)-1)*s/sqrt(length(num39))
cat(mu - MoE, mu + MoE)
mu <- mean(num39)
s <- sd(num39)
n <- length(num39)
MoE <- qt(0.975, df = n-1)*s/sqrt(n)
cat(mu - MoE, mu + MoE)
qt(.95,10)
qt(.95,15)
mu <- 8.48
s <- 0.79
n <- 14
MoE <- qt(0.95, df = n-1)*s/sqrt(n)
mu - MoE
t.test(num39)
cat(mu - MoE, mu + MoE)
mu <- mean(num39)
s <- sd(num39)
n <- length(num39)
MoE <- qt(0.975, df = n-1)*s/sqrt(n)
t.test(num39)
cat(mu - MoE, mu + MoE)
mu <- 8.48
s <- 0.79
n <- 14
MoE <- qt(0.95, df = n-1)*s/sqrt(n)
mu - MoE
mu <- 8.48
s <- 0.79
n <- 14
MoE <- qt(0.975, df = n-1)*s/sqrt(n)
mu - MoE
mu <- 8.48
s <- 0.79
n <- 14
MoE <- qt(0.95, df = n-1)*s/sqrt(n)
mu - MoE
hist(num39)
mu <- mean(num39)
s <- sd(num39)
n <- length(num39)
MoE <- qt(0.975, df = n-1)*s/sqrt(n)
cat(mu - MoE, mu + MoE)
t.test(num39)
qt(0.975, df = n-1)
qt(0.975, df = n-1)*s/sqrt(n)
qt(0.975, df = n-1)
mu <- 8.48
s <- 0.79
n <- 14
MoE <- qt(0.975, df = n-1)*s/sqrt(n)
mu - MoE
mu <- 8.48
s <- 0.79
n <- 14
MoE <- qt(0.975, df = n-1)*s/sqrt(n)
mu - MoE
num39 <- scan()
hist(num39)
mu <- mean(num39)
s <- sd(num39)
sd(num39)
mu <- mean(num39)
s <- sd(num39)
n <- length(num39)
MoE <- qt(0.975, df = n-1)*s/sqrt(n)
cat(mu - MoE, mu + MoE)
mu <- mean(num39)
s <- sd(num39)
n <- length(num39)
MoE <- qt(0.95, df = n-1)*s/sqrt(n)
cat(mu - MoE, mu + MoE)
t.test(num39)
cat(mu - MoE, mu + MoE)
mu <- mean(num39)
s <- sd(num39)
n <- length(num39)
MoE <- qt(0.975, df = n-1)*s/sqrt(n)
t.test(num39)
t.test(num39)
cat(mu - MoE, mu + MoE)
num46 <- scan()
mean(num46)
sd(num46)
num46<- scan()
mean(num46)
mu <- 8.48
s <- 0.79
n <- 14
MoE <- qt(0.05, df = n-1, lower.tail = F)*s/sqrt(n)
mu - MoE
mu <- mean(num39)
s <- sd(num39)
n <- length(num39)
MoE <- qt(0.05, df = n-1, lower.tail = F)*s/sqrt(n)
cat(mu - MoE, mu + MoE)
t.test(num39)
mu <- mean(num39)
s <- sd(num39)
n <- length(num39)
MoE <- qt(0.05, df = n-1)*s/sqrt(n)
t.test(num39)
cat(mu - MoE, mu + MoE)
MoE <- qt(0.95, df = n-1)*s/sqrt(n)
t.test(num39)
cat(mu - MoE, mu + MoE)
MoE <- qt(0.975, df = n-1)*s/sqrt(n)
t.test(num39)
cat(mu - MoE, mu + MoE)
num47 <- scan()
mu <- mean(num47)
sd <- sd(num47)
n <- 10
mu <- mean(num47)
s <- sd(num47)
n <- 10
mu <- mean(num47)
s <- sd(num47)
n <- 10
MoE <- qt(0.99, df = n-1, lower.tail = F)*s/sqrt(n)
mu + MoE
mu <- mean(num47)
s <- sd(num47)
n <- 10
MoE <- qt(0.99, df = n-1)*s/sqrt(n)
mu + MoE
mu <- mean(num47)
s <- sd(num47)
n <- 10
MoE <- qt(0.995, df = n-1)*s/sqrt(n)
mu + MoE
mu <- 8.48
s <- 0.79
n <- 14
MoE <- qt(0.975, df = n-1)*s/sqrt(n)
mu - MoE
mu <- mean(num47)
s <- sd(num47)
n <- 10
MoE <- qt(0.995, df = n-1)*s/sqrt(n)
mu + MoE
num49 <- scan()
mu <- mean(num49)
s <- sd(num49)
n <- 10
dof <- n-1
MoE <- qt(0.975, df = dof)*s*sqrt((1/n) + 1)
cat(mu - MoE, mu + MoE)
qchisq(0.995, 2)
qchisq(0.99, 2)
sqrt(qchisq(0.99, 2))
pt(q=-2.3, df=17, lower.tail=TRUE)
pt(q=-2.3, df=17, lower.tail=TRUE)
pt(q=-2.3, df=17)
pt(q=-1.8, df=17)
pt(q=-3.6, df=17)
num66 <- c(0.53/6, 0.65/6, 0.46/6, 0.5/6, 0.37/6)
hist(num66)
library(car)
library(car)
qqPlot(num66)
t.test(num66)
t.test(num66, x = 10, alternative = "less")
t.test(num66, mu = 10, alternative = "less")
t.test(num66, mu = 10, alternative = "less")
t.test(num66, mu = .10, alternative = "less")
num67 <- scan()
mean(num67)
sd(num67)
t.test(num67, mu = 3, alternative = "two.sided")
# setup -------------------------------------------------------------------
library(tidyverse)
library(ggpubr)
library(patchwork)
library(lubridate)
library(gridExtra)
library(bestglm)
library(car)
library(ggfortify)  # plot lm objects using ggplot instead of base R
library(corrplot)  # colored correlation matrix
pairs(elec, pch = 19)
num67
# Other Problem 1 ---------------------------------------------------------
num67
sd(num67)
chisq.test((length(num67) - 1) * var(num67) / (1.5)^2, df = length(sample_data) - 1)
chisq.test((length(num67) - 1) * var(num67) / (1.5)^2, df = length(num67) - 1)
chisq.test((length(num67) - 1) * var(num67) / (1.5)^2, df = 29)
chisq.test((length(num67) - 1) * var(num67) / (1.5)^2)
chisq.test(num67)
chisq.test(num67, df=29)
# Set null hypothesis
null_sd <- 1.5
# Degrees of freedom
df <- length(num67) - 1
# Calculate chi-square test statistic
chi_sq <- sum((num67 - mean(num67))^2) / null_sd^2
# Calculate p-value
p_value <- 1 - pchisq(chi_sq, df)
# Print results
cat("Chi-square test statistic:", round(chi_sq, 2), "\n")
cat("Degrees of freedom:", df, "\n")
cat("P-value:", p_value, "\n")
sigma.test(num67, sigma = 1.5, sigmasq = sigma^2, alternative = "greater", conf.level = 0.95)
chi_sq
binnedplot(x = elec$Energy, y = elec$residuals)
# orginial scatterplot
elec %>%
ggplot(mapping = aes(x = MinTemp, y = Energy)) +
geom_point()
pchisq(33.659)
pchisq(33.659, df = 29)
pchisq(33.659, df = 29, lower.tail = F)
names <- c("Autumn", "Justin")
sample(names, 1 replace = T)
sample(names, 1, replace = T)
options <- c("Go tonight!", "Go tomorrow!")
sample(names, 1, replace = T)
sample(names, 1, replace = T)
sample(names, 1, replace = T)
sample(names, 1, replace = T)
options <- c("Go tonight!", "Go tomorrow!")
sample(options, 1 , replace = T)
sample(options, 1 , replace = T)
sample(options, 1 , replace = T)
sample(options, 1 , replace = T)
sample(options, 1 , replace = T)
options <- c("Go tonight!", "Go tomorrow!")
sample(options, 1 , replace = T)
set.seed(1)
options <- c("Go tonight!", "Go tomorrow!")
sample(options, 1 , replace = T)
sample(options, 1 , replace = T)
set.seed(1)
sample(options, 1 , replace = T)
sample(options, 1 , replace = T)
sample(options, 1 , replace = T)
set.seed(1)
install.packages('mlb_pbp')
install.packages('baseballr')
library(baseballr)
bref_standings_on_date()
bref_standings_on_date("2023-06-16", "NL East", from = FALSE)
library(tidyverse)
link <- https://www.costcotravel.com/h=1501
link <- "https://www.costcotravel.com/h=1501"
library(rvest)
get_html_table <- function(url, index, header = T){
df <- url %>%
read_html() %>%
html_elements("table") %>%
html_table(header=header) %>%
.[[index]]
df
}
get_html_table(link,1)
get_html_table("https://www.costcotravel.com/h=1501")
install.packages(tidyverse)
install.packages("tidyverse")
## Read in the Data
bikes <- vroom("./train.csv")
##
## Bike Share EDA Code
##
## Libraries
library(tidyverse)
library(vroom)
## Read in the Data
bikes <- vroom("./train.csv")
##
## Bike Share EDA Code
##
## Libraries
library(tidyverse)
library(vroom)
## Read in the Data
bikes <- vroom("./train.csv")
##
## Bike Share EDA Code
##
## Libraries
library(tidyverse)
library(vroom)
## Read in the Data
bikes <- vroom("./train.csv")
library(vroom)
## Read in the Data
bikes <- vroom("./train.csv")
setwd("/Users/justinross/Documents/BYU/stat348/KaggleBikeShare")
##
## Bike Share EDA Code
##
## Libraries
library(tidyverse)
library(vroom)
## Read in the Data
bikes <- vroom("./train.csv")
bikes
