step_select(datetime, datetime_dow, season, holiday, workingday, weather, temp, atemp, humidity, windspeed, count)
prepped_recipe <- prep(my_recipe)
bake(prepped_recipe, bikes)
my_recipe <- recipe(count ~ ., bikes) %>%
step_date(datetime, features = "dow") %>% # gets day of week from datetime
step_rm(casual, registered, atemp) %>%  # remove casual and registered columns
step_select(datetime, datetime_dow, season, holiday, workingday,
weather, temp, atemp, humidity, windspeed, count)
prepped_recipe <- prep(my_recipe)
bake(prepped_recipe, bikes)
my_recipe <- recipe(count ~ ., bikes) %>%
step_date(datetime, features = "dow") %>% # gets day of week from datetime
step_rm(casual, registered, atemp) %>%  # remove casual and registered columns
step_select(datetime, datetime_dow, season, holiday, workingday,
weather, temp, humidity, windspeed, count) # reorder columns
prepped_recipe <- prep(my_recipe)
bake(prepped_recipe, bikes)
setwd("/Users/justinross/Documents/BYU/stat348/KaggleBikeShare")
# Libraries
library(tidyverse)
library(tidymodels)
library(vroom)
library(patchwork)
# Read in the Data
bikes <- vroom("./train.csv")
# convert variables to factors
bikes$season <- as.factor(bikes$season)
bikes$holiday <- as.factor(bikes$holiday)
bikes$workingday <- as.factor(bikes$workingday)
bikes$weather <- as.factor(bikes$weather)
my_recipe <- recipe(count ~ ., bikes) %>%
step_date(datetime, features = "dow") %>% # gets day of week from datetime
step_rm(casual, registered, atemp) %>%  # remove casual and registered columns
step_replace("weather", replace = list(weather = 4), with = 3) %>% # turn 4s into 3s
step_select(datetime, datetime_dow, season, holiday, workingday,
weather, temp, humidity, windspeed, count) # reorder columns
prepped_recipe <- prep(my_recipe)
bake(prepped_recipe, bikes)
my_recipe <- recipe(count ~ ., bikes) %>%
step_date(datetime, features = "dow") %>% # gets day of week from datetime
step_rm(casual, registered, atemp) %>%  # remove casual and registered columns
step_replace("weather", replace = list(weather = 4), with = 3) %>% # turn 4s into 3s
step_select(datetime, datetime_dow, season, holiday, workingday,
weather, temp, humidity, windspeed, count) # reorder columns
my_recipe <- recipe(count ~ ., bikes) %>%
step_date(datetime, features = "dow") %>% # gets day of week from datetime
step_rm(casual, registered, atemp) %>%  # remove casual and registered columns
step_mutate(weather = ifelse(weather == 4, 3, weather)) %>% # turn 4s into 3s
step_select(datetime, datetime_dow, season, holiday, workingday,
weather, temp, humidity, windspeed, count) # reorder columns
prepped_recipe <- prep(my_recipe)
bake(prepped_recipe, bikes)
my_mod <- linear_reg() %>%
set_engine("lm")
bike_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(my_mod) %>%
fit(data = bikes)
test_data <- vroom("./test.csv")
bikes_predictions <- predict(bike_workflow,
new_data = test_data) # use fit to predict
test_data$season <- as.factor(test_data$season)
test_data$holiday <- as.factor(test_data$holiday)
test_data$workingday <- as.factor(test_data$workingday)
test_data$weather <- as.factor(test_data$weather)
bake(prepped_recipe, test_data)
my_mod <- linear_reg() %>%
set_engine("lm")
bike_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(my_mod) %>%
fit(data = bikes)
bikes_predictions <- predict(bike_workflow,
new_data = test_data) # use fit to predict
my_recipe <- recipe(count ~ ., bikes) %>%
step_date(datetime, features = "dow") %>% # gets day of week from datetime
step_rm(casual, registered, atemp) %>%  # remove casual and registered columns
step_mutate(weather = ifelse(weather == 4, 3, weather)) %>% # turn 4s into 3s
step_select(datetime, datetime_dow, season, holiday, workingday,
weather, temp, humidity, windspeed, count) # reorder columns
prepped_recipe <- prep(my_recipe)
bake(prepped_recipe, bikes)
bake(prepped_recipe, test_data)
view(test_data)
my_recipe <- recipe(count ~ ., bikes) %>%
step_date(datetime, features = "dow") %>% # gets day of week from datetime
step_rm(casual, registered, atemp) %>%  # remove casual and registered columns
step_mutate(weather = ifelse(weather == 4, 3, weather)) %>% # turn 4s into 3s
step_select(datetime, datetime_dow, season, holiday, workingday,
weather, temp, humidity, windspeed) # reorder columns
prepped_recipe <- prep(my_recipe)
bake(prepped_recipe, bikes)
bake(prepped_recipe, test_data)
my_recipe <- recipe(count ~ ., bikes) %>%
step_date(datetime, features = "dow") %>% # gets day of week from datetime
#step_rm(casual, registered, atemp) %>%  # remove casual and registered columns
step_mutate(weather = ifelse(weather == 4, 3, weather)) %>% # turn 4s into 3s
step_select(datetime, datetime_dow, season, holiday, workingday,
weather, temp, humidity, windspeed, count) # reorder columns
prepped_recipe <- prep(my_recipe)
bake(prepped_recipe, bikes)
bake(prepped_recipe, test_data)
my_mod <- linear_reg() %>%
set_engine("lm")
bike_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(my_mod) %>%
fit(data = bikes)
bikes_predictions <- predict(bike_workflow,
new_data = test_data) # use fit to predict
# Libraries
library(tidyverse)
library(tidymodels)
library(vroom)
library(patchwork)
# Read in the Data
bikes <- vroom("./train.csv")
test_data <- vroom("./test.csv")
# convert variables to factors
bikes$season <- as.factor(bikes$season)
bikes$holiday <- as.factor(bikes$holiday)
bikes$workingday <- as.factor(bikes$workingday)
bikes$weather <- as.factor(bikes$weather)
test_data$season <- as.factor(test_data$season)
test_data$holiday <- as.factor(test_data$holiday)
test_data$workingday <- as.factor(test_data$workingday)
test_data$weather <- as.factor(test_data$weather)
my_recipe <- recipe(count ~ ., bikes) %>%
step_date(datetime, features = "dow") %>% # gets day of week from datetime
step_rm(casual, registered, atemp) %>%  # remove casual and registered columns
step_mutate(weather = ifelse(weather == 4, 3, weather)) %>% # turn 4s into 3s
step_select(datetime, datetime_dow, season, holiday, workingday,
weather, temp, humidity, windspeed, count) # reorder columns
prepped_recipe <- prep(my_recipe)
bake(prepped_recipe, bikes)
bake(prepped_recipe, test_data)
my_recipe <- recipe(count ~ ., bikes) %>%
step_date(datetime, features = "dow") %>% # gets day of week from datetime
#step_rm(casual, registered, atemp) %>%  # remove casual and registered columns
step_mutate(weather = ifelse(weather == 4, 3, weather)) %>% # turn 4s into 3s
step_select(datetime, datetime_dow, season, holiday, workingday,
weather, temp, humidity, windspeed, count) # reorder columns
prepped_recipe <- prep(my_recipe)
bake(prepped_recipe, bikes)
bake(prepped_recipe, test_data)
my_recipe <- recipe(count ~ ., bikes) %>%
step_date(datetime, features = "dow") %>% # gets day of week from datetime
step_rm(casual, registered, atemp) %>%  # remove casual and registered columns
step_mutate(weather = ifelse(weather == 4, 3, weather)) %>% # turn 4s into 3s
step_select(datetime, datetime_dow, season, holiday, workingday,
weather, temp, humidity, windspeed, count) # reorder columns
prepped_recipe <- prep(my_recipe)
bake(prepped_recipe, bikes)
bake(prepped_recipe, test_data)
my_mod <- linear_reg() %>%
set_engine("lm")
bike_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(my_mod) %>%
fit(data = bikes)
bikes_predictions <- predict(bike_workflow,
new_data = test_data) # use fit to predict
test_data <- vroom("./test.csv") %>%
select(-casual, -registered)
# Read in the Data
bikes <- vroom("./train.csv") %>%
select(-casual, -registered)
# Libraries
library(tidyverse)
library(tidymodels)
library(vroom)
library(patchwork)
# Read in the Data
bikes <- vroom("./train.csv") %>%
select(-casual, -registered)
test_data <- vroom("./test.csv")
# convert variables to factors
bikes$season <- as.factor(bikes$season)
bikes$holiday <- as.factor(bikes$holiday)
bikes$workingday <- as.factor(bikes$workingday)
bikes$weather <- as.factor(bikes$weather)
test_data$season <- as.factor(test_data$season)
test_data$holiday <- as.factor(test_data$holiday)
test_data$workingday <- as.factor(test_data$workingday)
test_data$weather <- as.factor(test_data$weather)
my_recipe <- recipe(count ~ ., bikes) %>%
step_date(datetime, features = "dow") %>% # gets day of week from datetime
step_mutate(weather = ifelse(weather == 4, 3, weather)) %>% # turn 4s into 3s
step_select(datetime, datetime_dow, season, holiday, workingday,
weather, temp, humidity, windspeed, count) # reorder columns
prepped_recipe <- prep(my_recipe)
bake(prepped_recipe, bikes)
bake(prepped_recipe, test_data)
my_mod <- linear_reg() %>%
set_engine("lm")
bike_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(my_mod) %>%
fit(data = bikes)
bikes_predictions <- predict(bike_workflow,
new_data = test_data) # use fit to predict
bake(prepped_recipe, test_data)
# Read in the Data
bikes <- vroom("./train.csv") %>%
select(-casual, -registered, -count)
test_data <- vroom("./test.csv")
# convert variables to factors
bikes$season <- as.factor(bikes$season)
bikes$holiday <- as.factor(bikes$holiday)
bikes$workingday <- as.factor(bikes$workingday)
bikes$weather <- as.factor(bikes$weather)
test_data$season <- as.factor(test_data$season)
test_data$holiday <- as.factor(test_data$holiday)
test_data$workingday <- as.factor(test_data$workingday)
test_data$weather <- as.factor(test_data$weather)
my_recipe <- recipe(count ~ ., bikes) %>%
step_date(datetime, features = "dow") %>% # gets day of week from datetime
step_mutate(weather = ifelse(weather == 4, 3, weather)) %>% # turn 4s into 3s
step_select(datetime, datetime_dow, season, holiday, workingday,
weather, temp, humidity, windspeed, count) # reorder columns
prepped_recipe <- prep(my_recipe)
bake(prepped_recipe, bikes)
my_recipe <- recipe(count ~ ., bikes) %>%
step_date(datetime, features = "dow") %>% # gets day of week from datetime
step_mutate(weather = ifelse(weather == 4, 3, weather)) %>% # turn 4s into 3s
step_select(datetime, datetime_dow, season, holiday, workingday,
weather, temp, humidity, windspeed) # reorder columns
# Libraries
library(tidyverse)
library(tidymodels)
library(vroom)
library(patchwork)
# Read in the Data
bikes <- vroom("./train.csv") %>%
select(-casual, -registered)
test_data <- vroom("./test.csv")
# convert variables to factors
bikes$season <- as.factor(bikes$season)
bikes$holiday <- as.factor(bikes$holiday)
bikes$workingday <- as.factor(bikes$workingday)
bikes$weather <- as.factor(bikes$weather)
test_data$season <- as.factor(test_data$season)
test_data$holiday <- as.factor(test_data$holiday)
test_data$workingday <- as.factor(test_data$workingday)
test_data$weather <- as.factor(test_data$weather)
my_recipe <- recipe(count ~ ., bikes) %>%
step_date(datetime, features = "dow") %>% # gets day of week from datetime
step_mutate(weather = ifelse(weather == 4, 3, weather)) %>% # turn 4s into 3s
step_select(datetime, datetime_dow, season, holiday, workingday,
weather, temp, humidity, windspeed, count) # reorder columns
prepped_recipe <- prep(my_recipe)
bake(prepped_recipe, bikes)
my_mod <- linear_reg() %>%
set_engine("lm")
bike_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(my_mod) %>%
fit(data = bikes)
bikes_predictions <- predict(bike_workflow,
new_data = test_data) # use fit to predict
my_recipe <- recipe(count ~ ., bikes) %>%
step_mutate(weather = ifelse(weather == 4, 3, weather)) %>% # turn 4s into 3s
step_select(datetime, datetime_dow, season, holiday, workingday,
weather, temp, humidity, windspeed, count) # reorder columns
prepped_recipe <- prep(my_recipe)
bake(prepped_recipe, bikes)
rm(list=ls())
bikes <- vroom("./train.csv") %>%
select(-casual, -registered)
test_data <- vroom("./test.csv")
# cleaning ----------------------------------------------------------------
# convert variables to factors
bikes$season <- as.factor(bikes$season)
bikes$holiday <- as.factor(bikes$holiday)
bikes$workingday <- as.factor(bikes$workingday)
bikes$weather <- as.factor(bikes$weather)
test_data$season <- as.factor(test_data$season)
test_data$holiday <- as.factor(test_data$holiday)
test_data$workingday <- as.factor(test_data$workingday)
test_data$weather <- as.factor(test_data$weather)
# fe
my_recipe <- recipe(count ~ ., bikes) %>%
step_mutate(weather = ifelse(weather == 4, 3, weather)) %>% # turn 4s into 3s
step_select(datetime, datetime_dow, season, holiday, workingday,
weather, temp, humidity, windspeed, count) # reorder columns
prepped_recipe <- prep(my_recipe)
my_recipe <- recipe(count ~ ., bikes) %>%
step_mutate(weather = ifelse(weather == 4, 3, weather)) %>% # turn 4s into 3s
step_select(datetime, season, holiday, workingday,
weather, temp, humidity, windspeed, count) # reorder columns
prepped_recipe <- prep(my_recipe)
bake(prepped_recipe, bikes)
my_mod <- linear_reg() %>%
set_engine("lm")
bike_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(my_mod) %>%
fit(data = bikes)
bikes_predictions <- predict(bike_workflow,
new_data = test_data) # use fit to predict
my_recipe <- recipe(count ~ ., bikes) %>%
step_mutate(weather = ifelse(weather == 4, 3, weather)) %>% # turn 4s into 3s
step_select(datetime, season, holiday, workingday,
weather, temp, humidity, windspeed) # reorder columns
prepped_recipe <- prep(my_recipe)
bake(prepped_recipe, bikes)
bake(prepped_recipe, test_data)
my_mod <- linear_reg() %>%
set_engine("lm")
bike_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(my_mod) %>%
fit(data = bikes)
bikes_predictions <- predict(bike_workflow,
new_data = test_data) # use fit to predict
rm(list=ls())
# Read in the Data
bikes <- vroom("./train.csv") %>%
select(-casual, -registered)
test_data <- vroom("./test.csv")
# cleaning ----------------------------------------------------------------
# convert variables to factors
bikes$season <- as.factor(bikes$season)
bikes$holiday <- as.factor(bikes$holiday)
bikes$workingday <- as.factor(bikes$workingday)
bikes$weather <- as.factor(bikes$weather)
test_data$season <- as.factor(test_data$season)
test_data$holiday <- as.factor(test_data$holiday)
test_data$workingday <- as.factor(test_data$workingday)
test_data$weather <- as.factor(test_data$weather)
# feature engineering -----------------------------------------------------
my_recipe <- recipe(count ~ ., bikes) %>%
step_mutate(weather = ifelse(weather == 4, 3, weather)) %>% # turn 4s into 3s
step_select(datetime, season, holiday, workingday,
weather, temp, humidity, windspeed) # reorder columns
prepped_recipe <- prep(my_recipe)
bake(prepped_recipe, bikes)
bake(prepped_recipe, test_data)
# linear regression -------------------------------------------------------
my_mod <- linear_reg() %>%
set_engine("lm")
bike_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(my_mod) %>%
fit(data = bikes)
rm(list=ls())
# Read in the Data
bikes <- vroom("./train.csv") %>%
select(-casual, -registered)
test_data <- vroom("./test.csv")
# cleaning ----------------------------------------------------------------
# convert variables to factors
bikes$season <- as.factor(bikes$season)
bikes$holiday <- as.factor(bikes$holiday)
bikes$workingday <- as.factor(bikes$workingday)
bikes$weather <- as.factor(bikes$weather)
test_data$season <- as.factor(test_data$season)
test_data$holiday <- as.factor(test_data$holiday)
test_data$workingday <- as.factor(test_data$workingday)
test_data$weather <- as.factor(test_data$weather)
my_recipe <- recipe(count ~ ., bikes) %>%
step_mutate(weather = ifelse(weather == 4, 3, weather)) %>% # turn 4s into 3s
prepped_recipe <- prep(my_recipe)
my_recipe <- recipe(count ~ ., bikes) %>%
step_mutate(weather = ifelse(weather == 4, 3, weather)) %>% # turn 4s into 3s
prepped_recipe <- prep(my_recipe)
my_recipe <- recipe(count ~ ., bikes) %>%
step_mutate(weather = ifelse(weather == 4, 3, weather)) %>% # turn 4s into 3s
prepped_recipe <- prep(my_recipe)
my_recipe <- recipe(count ~ ., bikes) %>%
step_mutate(weather = ifelse(weather == 4, 3, weather)) # turn 4s into 3s
my_mod <- linear_reg() %>%
set_engine("lm")
bike_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(my_mod) %>%
fit(data = bikes)
bikes_predictions <- predict(bike_workflow,
new_data = test_data) # use fit to predict
bikes_predictions
view(bikes)
rm(list=ls())
# Read in the Data
bikes <- vroom("./train.csv") %>%
select(-casual, -registered)
test_data <- vroom("./test.csv")
my_recipe <- recipe(count ~ ., bikes) %>%
step_mutate(weather = ifelse(weather == 4, 3, weather)) %>% # turn 4s into 3s
step_num2factor(season, levels=c(1,2,3,4)) %>%  # convert variables to factors
step_num2factor(holiday, levels=c(0,1)) %>%
step_num2factor(workingday, levels=c(0,1)) %>%
step_num2factor(weather, levels=c(1,2,3))
prepped_recipe <- prep(my_recipe)
bake(prepped_recipe, bikes)
bake(prepped_recipe, test_data)
prepped_recipe <- prep(my_recipe)
my_recipe <- recipe(count ~ ., bikes) %>%
step_mutate(weather = ifelse(weather == 4, 3, weather)) %>% # turn 4s into 3s
step_num2factor(season, levels=c(1,2,3,4)) %>%  # convert variables to factors
step_num2factor(holiday, levels=c(0,1)) %>%
step_num2factor(workingday, levels=c(0,1)) %>%
step_num2factor(weather, levels=c(1,2,3))
rlang::last_trace()
rm(list=ls())
# Read in the Data
bikes <- vroom("./train.csv") %>%
select(-casual, -registered)
test_data <- vroom("./test.csv")
my_recipe <- recipe(count ~ ., bikes) %>%
step_mutate(weather = ifelse(weather == 4, 3, weather)) %>% # turn 4s into 3s
step_num2factor(season, levels=c('1','2','3','4')) %>%  # convert variables to factors
step_num2factor(holiday, levels=c('0','1')) %>%
step_num2factor(workingday, levels=c('0','1')) %>%
step_num2factor(weather, levels=c('1','2','3'))
prepped_recipe <- prep(my_recipe)
my_recipe <- recipe(count ~ ., bikes) %>%
step_mutate(weather = ifelse(weather == 4, 3, weather)) %>% # turn 4s into 3s
step_num2factor(season, levels=c(1,2,3,4)) %>%  # convert variables to factors
step_num2factor(holiday, levels=c(0,1)) %>%
step_num2factor(workingday, levels=c(0,1)) %>%
step_num2factor(weather, levels=c(1,2,3))
my_recipe <- recipe(count ~ ., bikes) %>%
step_mutate(weather = ifelse(weather == 4, 3, weather)) %>% # turn 4s into 3s
step_num2factor(season, levels=c(1,2,3,4)) %>%  # convert variables to factors
step_num2factor(holiday, levels=c(0,1)) %>%
step_num2factor(workingday, levels=c(0,1)) %>%
step_num2factor(weather, levels=c(1,2,3,4))
my_recipe <- recipe(count ~ ., bikes) %>%
step_mutate(weather = ifelse(weather == 4, 3, weather)) %>% # turn 4s into 3s
step_num2factor(season, levels=c(1,2,3,4)) %>%  # convert variables to factors
step_num2factor(holiday, levels=c(0,1)) %>%
step_num2factor(workingday, levels=c(0,1)) %>%
step_num2factor(weather, levels=c(1,2,3))
prepped_recipe <- prep(my_recipe)
bake(prepped_recipe, bikes)
rm(list=ls())
# Read in the Data
bikes <- vroom("./train.csv") %>%
select(-casual, -registered)
test_data <- vroom("./test.csv")
my_recipe <- recipe(count ~ ., bikes) %>%
step_mutate(weather = ifelse(weather == 4, 3, weather)) %>% # turn 4s into 3s
step_num2factor(season, levels=c("spring","summer","fall","winter")) %>%  # convert variables to factors
step_num2factor(holiday, levels=c("no","yes")) %>%
step_num2factor(workingday, levels=c("no","yes")) %>%
step_num2factor(weather, levels=c("partly_cloudy","misty","rainy"))
prepped_recipe <- prep(my_recipe)
my_recipe <- recipe(count ~ ., bikes) %>%
step_mutate(weather = ifelse(weather == 4, 3, weather)) %>% # turn 4s into 3s
step_num2factor(weather, levels=c("Sunny", "Mist", "Rain")) %>%
step_num2factor(season, levels=c("Spring", "Summer", "Fall", "Winter")) %>%
step_mutate(holiday=factor(holiday, levels=c(0,1), labels=c("No", "Yes"))) %>%
step_mutate(workingday=factor(workingday,levels=c(0,1), labels=c("No", "Yes")))
prepped_recipe <- prep(my_recipe)
bake(prepped_recipe, bikes)
my_mod <- linear_reg() %>%
set_engine("lm")
bike_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(my_mod) %>%
fit(data = bikes)
bikes_predictions <- predict(bike_workflow,
new_data = test_data) # use fit to predict
bikes_predictions
View(bikes_predictions)
view(test_data)
my_recipe <- recipe(count ~ ., bikes) %>%
step_mutate(weather = ifelse(weather == 4, 3, weather)) %>% # turn 4s into 3s
step_num2factor(season, levels=c("spring", "summer", "fall", "winter")) %>%
step_num2factor(weather, levels=c("partly_cloudy", "misty", "rainy")) %>%
step_mutate(holiday=factor(holiday, levels=c(0,1), labels=c("no", "yes"))) %>%
step_mutate(workingday=factor(workingday,levels=c(0,1), labels=c("no", "yes")))
prepped_recipe <- prep(my_recipe)
bake(prepped_recipe, bikes)
bake(prepped_recipe, test_data)
my_mod <- linear_reg() %>%
set_engine("lm")
bike_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(my_mod) %>%
fit(data = bikes)
bikes_predictions <- predict(bike_workflow,
new_data = test_data) # use fit to predict
bikes_predictions
bikes_predictions[bikes_predictions < 0] <- 0
view(bikes_predictions)
data.frame(test_data$datetime, bikes_predictions)
head(data.frame(test_data$datetime, bikes_predictions))
predictions <- data.frame(test_data$datetime, bikes_predictions)
head(predictions)
colnames(predictions) = c("datetime", "count")
head(predictions)
out_file <- tempfile(fileext = "csv")
vroom_write(predictions, out_file, ",")
file_name <- "predictions.csv"
# Write data to the CSV file using vroom_write
vroom_write(data, file_name)
write_csv(predictions, "predictions.csv")
predictions$datetime <- as.character(predictions$datetime)
write_csv(predictions, "predictions.csv")
predictions <- data.frame(test_data$datetime, bikes_predictions)
colnames(predictions) = c("datetime", "count")
write_csv(predictions, "predictions.csv")
predictions <- data.frame(test_data$datetime, bikes_predictions)
colnames(predictions) = c("datetime", "count")
write_csv(predictions, "predictions.csv")
predictions$datetime <- ymd_hms(predictions$datetime)
write_csv(predictions, "predictions.csv")
predictions <- data.frame(test_data$datetime, bikes_predictions)
colnames(predictions) = c("datetime", "count")
predictions$datetime <- as.character(predictions$datetime)
write_csv(predictions, "predictions.csv")
